syntax="proto3";

import "google/protobuf/timestamp.proto";

package amqp;

option go_package = ".;amqp";

message RabbitMQMessage
{
    Type     type     = 1;
    Language language = 2;
    Status   status   = 3;
    
    NewsTwitterMessage                     newsTwitterMessage                    = 100;
    NewsRSSMessage                         newsRSSMessage                        = 101;
 
    PortalPositionRequest                  portalPositionRequest                 = 200;
    PortalPositionAnswer                   portalPositionAnswer                  = 201;

    ConfigurationGetRequest                configurationGetRequest               = 300;
    ConfigurationGetAnswer                 configurationGetAnswer                = 301;
    ConfigurationSetServerRequest          configurationSetServerWebhookRequest  = 302;
    ConfigurationSetAlmanaxWebhookRequest  configurationSetAlmanaxWebhookRequest = 303;
    ConfigurationSetRssWebhookRequest      configurationSetRssWebhookRequest     = 304;
    ConfigurationSetTwitterWebhookRequest  configurationSetTwitterWebhookRequest = 305;
    ConfigurationSetAnswer                 configurationSetAnswer                = 306;

    JobGetBookRequest                      jobGetBookRequest                     = 400;
    JobGetBookAnswer                       jobGetBookAnswer                      = 401;
    JobGetUserRequest                      jobGetUserRequest                     = 402;
    JobGetUserAnswer                       jobGetUserAnswer                      = 403;
    JobSetRequest                          jobSetRequest                         = 404;
    JobSetAnswer                           jobSetAnswer                          = 405;

    AlignGetBookRequest                    alignGetBookRequest                   = 500;
    AlignGetBookAnswer                     alignGetBookAnswer                    = 501;
    AlignGetUserRequest                    alignGetUserRequest                   = 502;
    AlignGetUserAnswer                     alignGetUserAnswer                    = 503;
    AlignSetRequest                        alignSetRequest                       = 504;
    AlignSetAnswer                         alignSetAnswer                        = 505;

    enum Type
    {
        UNKNOWN                   =  0;
        NEWS_RSS                  =  1;
        NEWS_TWITTER              =  2;
        PORTAL_POSITION_REQUEST   =  3;
        PORTAL_POSITION_ANSWER    =  4;
        CONFIGURATION_GET_REQUEST =  5;
        CONFIGURATION_GET_ANSWER  =  6;
        CONFIGURATION_SET_REQUEST =  7;
        CONFIGURATION_SET_ANSWER  =  8;
        JOB_GET_BOOK_REQUEST      =  9;
        JOB_GET_BOOK_ANSWER       = 10;
        JOB_GET_USER_REQUEST      = 11;
        JOB_GET_USER_ANSWER       = 12;
        JOB_SET_REQUEST           = 13;
        JOB_SET_ANSWER            = 14;
        ALIGN_GET_BOOK_REQUEST    = 15;
        ALIGN_GET_BOOK_ANSWER     = 16;
        ALIGN_GET_USER_REQUEST    = 17;
        ALIGN_GET_USER_ANSWER     = 18;
        ALIGN_SET_REQUEST         = 19;
        ALIGN_SET_ANSWER          = 20;
    }

    enum Status 
    {
        SUCCESS = 0;
        FAILED  = 1;
    }
}

enum Language 
{
    ANY = 0;
    FR  = 1;
    EN  = 2;
    ES  = 3;
}

message NewsTwitterMessage
{
    string url                     = 1;
    google.protobuf.Timestamp date = 2;
}

message NewsRSSMessage
{
	string                    title      = 1;
    string                    authorName = 2;
    string                    url        = 3;
    string                    iconUrl    = 4;
    google.protobuf.Timestamp date       = 5;
    string                    type       = 6;
}

message PortalPositionRequest
{
    string serverId    = 1;
    string dimensionId = 2;
}

message PortalPositionAnswer
{
    repeated PortalPosition positions = 1;

    message PortalPosition {
        string                    serverId      = 1;
        string                    dimensionId   = 2;
        int32                     remainingUses = 3;
        Position                  position      = 4;
        string                    createdBy     = 5;
        string                    updatedBy     = 6;
        google.protobuf.Timestamp createdAt     = 7;
        google.protobuf.Timestamp updatedAt     = 8;
        Source                    source        = 9;

        message Position {
            int32 x                        = 1;
            int32 y                        = 2;
            bool isInCanopy                = 3;
            Transport transport            = 4;
            Transport conditionalTransport = 5;

            message Transport {
                string areaId    = 1;
                string subAreaId = 2;
                string typeId    = 3;
                int32 x          = 4;
                int32 y          = 5;
            }
        }

        message Source {
            string name = 1;
            string icon = 2;
            string url  = 3;
        }
    }
}

message ConfigurationGetRequest
{
    string guildId = 1;
}

message ConfigurationGetAnswer
{
    string                  guildId         = 1;
    string                  serverId        = 2;
    repeated ChannelServer  channelServers  = 3;
    repeated AlmanaxWebhook almanaxWebhooks = 4;
    repeated RssWebhook     rssWebhooks     = 5;
    repeated TwitterWebhook twitterWebhooks = 6;

    message ChannelServer {
        string channelId = 1;
        string serverId  = 2;
    }

    message AlmanaxWebhook {
        string   channelId = 1;
        Language language  = 2;
    }

    message RssWebhook {
        string   channelId = 1;
        string   feedId    = 2;
        Language language  = 3;
    }

    message TwitterWebhook {
        string   channelId = 1;
        Language language  = 2;
    }
}

message ConfigurationSetServerRequest
{
    string       guildId      = 1;
    string       channelId    = 2;
    string       serverId     = 3;
}

message ConfigurationSetAlmanaxWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   webhookId    = 3;
    string   webhookToken = 4;
    bool     enabled      = 5;
    Language language     = 6;
}

message ConfigurationSetRssWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   feedId       = 3;
    string   webhookId    = 4;
    string   webhookToken = 5;
    bool     enabled      = 6;
    Language language     = 7;
}

message ConfigurationSetTwitterWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   webhookId    = 3;
    string   webhookToken = 4;
    bool     enabled      = 5;
    Language language     = 6;
}

message ConfigurationSetAnswer
{
}

message JobGetBookRequest
{
    repeated string userIds  = 1;
    string          jobId    = 2;
    string          serverId = 3;
    int64           limit    = 4;
}

message JobGetBookAnswer
{
    string             jobId     = 1;
    string             serverId  = 2;
    repeated Craftsman craftsmen = 3;
    
    message Craftsman
    {
        string userId = 1;
        int64  level  = 2;
    }
}

message JobGetUserRequest
{
    string userId   = 1;
    string serverId = 2;
}

message JobGetUserAnswer
{
    string                 serverId  = 1;
    repeated JobExperience jobs      = 2;
    
    message JobExperience
    {
        string jobId = 1;
        int64  level = 2;
    }
}

message JobSetRequest
{
    string userId   = 1;
    string jobId    = 2;
    string serverId = 3;
    int64  level    = 4;
}

message JobSetAnswer
{
}

message AlignGetBookRequest
{
    repeated string userIds  = 1;
    string          cityId   = 2;
    string          orderId  = 3;
    string          serverId = 4;
    int64           limit    = 5;
}

message AlignGetBookAnswer
{
    string            serverId  = 1;
    repeated Believer believers = 2;
    
    message Believer
    {
        string cityId  = 1;
        string orderId = 2;
        string userId  = 3;
        int64  level   = 4;
    }
}

message AlignGetUserRequest
{
    string userId   = 1;
    string serverId = 2;
}

message AlignGetUserAnswer
{
    string                   serverId = 1;
    repeated AlignExperience beliefs  = 2;
    
    message AlignExperience
    {
        string cityId  = 1;
        string orderId = 2;
        int64  level   = 3;
    }
}

message AlignSetRequest
{
    string userId   = 1;
    string cityId   = 2;
    string orderId  = 3;
    string serverId = 4;
    int64  level    = 5;
}

message AlignSetAnswer
{
}
