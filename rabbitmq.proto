syntax="proto3";

import "google/protobuf/timestamp.proto";

package amqp;

option go_package = ".;amqp";

message RabbitMQMessage
{
    Type     type     = 1;
    Language language = 2;
    Status   status   = 3;
    Game     game     = 4;
    string   userID   = 5;

    AlignGetBookRequest                    alignGetBookRequest                   = 100;
    AlignGetBookAnswer                     alignGetBookAnswer                    = 101;
    AlignGetUserRequest                    alignGetUserRequest                   = 102;
    AlignGetUserAnswer                     alignGetUserAnswer                    = 103;
    AlignSetRequest                        alignSetRequest                       = 104;
    AlignSetAnswer                         alignSetAnswer                        = 105;

    CompetitionMapRequest                  competitionMapRequest                 = 200;
    CompetitionMapAnswer                   competitionMapAnswer                  = 201;
    
    ConfigurationGetRequest                configurationGetRequest               = 300;
    ConfigurationGetAnswer                 configurationGetAnswer                = 301;
    ConfigurationSetServerRequest          configurationSetServerRequest         = 302;
    ConfigurationSetAlmanaxWebhookRequest  configurationSetAlmanaxWebhookRequest = 303;
    ConfigurationSetRssWebhookRequest      configurationSetRssWebhookRequest     = 304;
    ConfigurationSetTwitchWebhookRequest   configurationSetTwitchWebhookRequest  = 305;
    ConfigurationSetTwitterWebhookRequest  configurationSetTwitterWebhookRequest = 306;
    ConfigurationSetYoutubeWebhookRequest  configurationSetYoutubeWebhookRequest = 307;
    ConfigurationSetAnswer                 configurationSetAnswer                = 350;

    EncyclopediaAlmanaxRequest             encyclopediaAlmanaxRequest            = 400;
    EncyclopediaAlmanaxAnswer              encyclopediaAlmanaxAnswer             = 401;
    EncyclopediaAlmanaxResourceRequest     encyclopediaAlmanaxResourceRequest    = 402;
    EncyclopediaAlmanaxResourceAnswer      encyclopediaAlmanaxResourceAnswer     = 403;
    EncyclopediaAlmanaxEffectRequest       encyclopediaAlmanaxEffectRequest      = 404;
    EncyclopediaAlmanaxEffectAnswer        encyclopediaAlmanaxEffectAnswer       = 405;
    EncyclopediaListRequest                encyclopediaListRequest               = 406;
    EncyclopediaListAnswer                 encyclopediaListAnswer                = 407;
    EncyclopediaItemRequest                encyclopediaItemRequest               = 408;
    EncyclopediaItemAnswer                 encyclopediaItemAnswer                = 409;

    JobGetBookRequest                      jobGetBookRequest                     = 500;
    JobGetBookAnswer                       jobGetBookAnswer                      = 501;
    JobGetUserRequest                      jobGetUserRequest                     = 502;
    JobGetUserAnswer                       jobGetUserAnswer                      = 503;
    JobSetRequest                          jobSetRequest                         = 504;
    JobSetAnswer                           jobSetAnswer                          = 505;

    NewsAlmanaxMessage                     newsAlmanaxMessage                    = 600;
    NewsGameMessage                        newsGameMessage                       = 601;
    NewsRSSMessage                         newsRSSMessage                        = 602;
    NewsSetMessage                         newsSetMessage                        = 603;
    NewsTwitterMessage                     newsTwitterMessage                    = 604;
 
    PortalPositionRequest                  portalPositionRequest                 = 700;
    PortalPositionAnswer                   portalPositionAnswer                  = 701;

    enum Type
    {
        UNKNOWN                                   =   0;

        ABOUT_REQUEST                             = 100;

        ALIGN_GET_BOOK_REQUEST                    = 200;
        ALIGN_GET_BOOK_ANSWER                     = 201;
        ALIGN_GET_USER_REQUEST                    = 202;
        ALIGN_GET_USER_ANSWER                     = 203;
        ALIGN_SET_REQUEST                         = 204;
        ALIGN_SET_ANSWER                          = 205;

        COMPETITION_MAP_REQUEST                   = 300;
        COMPETITION_MAP_ANSWER                    = 301;

        CONFIGURATION_GET_REQUEST                 = 400;
        CONFIGURATION_GET_ANSWER                  = 401;
        CONFIGURATION_SET_SERVER_REQUEST          = 402;
        CONFIGURATION_SET_ALMANAX_WEBHOOK_REQUEST = 403;
        CONFIGURATION_SET_RSS_WEBHOOK_REQUEST     = 404;
        CONFIGURATION_SET_TWITCH_WEBHOOK_REQUEST  = 405;
        CONFIGURATION_SET_TWITTER_WEBHOOK_REQUEST = 406;
        CONFIGURATION_SET_YOUTUBE_WEBHOOK_REQUEST = 407;
        CONFIGURATION_SET_ANSWER                  = 450;

        ENCYCLOPEDIA_ALMANAX_REQUEST              = 500;
        ENCYCLOPEDIA_ALMANAX_ANSWER               = 501;
        ENCYCLOPEDIA_ALMANAX_RESOURCE_REQUEST     = 502;
        ENCYCLOPEDIA_ALMANAX_RESOURCE_ANSWER      = 503;
        ENCYCLOPEDIA_ALMANAX_EFFECT_REQUEST       = 504;
        ENCYCLOPEDIA_ALMANAX_EFFECT_ANSWER        = 505;
        ENCYCLOPEDIA_LIST_REQUEST                 = 506;
        ENCYCLOPEDIA_LIST_ANSWER                  = 507;
        ENCYCLOPEDIA_ITEM_REQUEST                 = 508;
        ENCYCLOPEDIA_ITEM_ANSWER                  = 509;

        HELP_REQUEST                              = 600;
        
        JOB_GET_BOOK_REQUEST                      = 700;
        JOB_GET_BOOK_ANSWER                       = 701;
        JOB_GET_USER_REQUEST                      = 702;
        JOB_GET_USER_ANSWER                       = 703;
        JOB_SET_REQUEST                           = 704;
        JOB_SET_ANSWER                            = 705;

        NEWS_ALMANAX                              = 800;     
        NEWS_GAME                                 = 801;
        NEWS_RSS                                  = 802;
        NEWS_SET                                  = 803;
        NEWS_TWITTER                              = 804;

        PORTAL_POSITION_REQUEST                   = 900;
        PORTAL_POSITION_ANSWER                    = 901;
    }

    enum Status 
    {
        SUCCESS = 0;
        FAILED  = 1;
    }
}

enum Game
{
    ANY_GAME    = 0;
    DOFUS_GAME  = 1;
    DOFUS_TOUCH = 2;
    DOFUS_RETRO = 3;
}

enum Language 
{
    ANY = 0;
    FR  = 1;
    EN  = 2;
    ES  = 3;
    DE  = 4;
}

enum EquipmentType
{
    NONE         = 0;

    // Equipment
    AMULET        =  1;
    AXE           =  2;
    BELT          =  3;
    BOOT          =  4;
    BOW           =  5;
    CLOAK         =  6;
    DAGGER        =  7;
    DOFUS         =  8;
    DRAGOTURKEY   =  9;
    HAMMER        = 10;
    HAT           = 11;
    LANCE         = 12;
    PET           = 13;
    PETSMOUNT     = 14;
    PICKAXE       = 15;
    PRYSMARADITE  = 16;
    RHINEETLE     = 17;
    RING          = 18;
    SCYTHE        = 19;
    SEEMYOOL      = 20;
    SHIELD        = 21;
    SHOVEL        = 22;
    STAFF         = 23;
    SWORD         = 24;
    TOOL          = 25;
    TROPHY        = 26;
    WAND          = 27;

    // Cosmetic
    COSTUME       = 28;
    LIVING_OBJECT = 29;
    MISC_COSMETIC = 30;
    SHOULDER_PAD  = 31;
    WING          = 32;
}

enum ItemType
{
    ANY_ITEM_TYPE   = 0;
    CONSUMABLE_TYPE = 1;
    COSMETIC_TYPE   = 2;
    EQUIPMENT_TYPE  = 3;
    MOUNT_TYPE      = 4;
    QUEST_ITEM_TYPE = 5;
    RESOURCE_TYPE   = 6;
    SET_TYPE        = 7;
}

message Almanax
{
    string                    bonus    = 1;
    Tribute                   tribute  = 2;
    int64                     reward   = 3;
    google.protobuf.Timestamp date     = 4;

    message Tribute
    {
        Item  item     = 1;
        int64 quantity = 2;

        message Item
        {
            string name   = 1;
            string icon   = 2;
            ItemType type = 3;
        }
    }
}

message Source
{
    string name = 1;
    string icon = 2;
    string url  = 3;
}

message AlignGetBookRequest
{
    repeated string userIds  = 1;
    string          cityId   = 2;
    string          orderId  = 3;
    string          serverId = 4;
    int64           offset   = 5;
    int64           size     = 6;
}

message AlignGetBookAnswer
{
    string            cityId    = 1;
    string            orderId   = 2;
    string            serverId  = 3;
    int64             page      = 4;
    int64             pages     = 5;
    int64             total     = 6;
    repeated Believer believers = 7;
    
    message Believer
    {
        string cityId  = 1;
        string orderId = 2;
        string userId  = 3;
        int64  level   = 4;
    }
}

message AlignGetUserRequest
{
    string userId   = 1;
    string serverId = 2;
}

message AlignGetUserAnswer
{
    string                   serverId = 1;
    repeated AlignExperience beliefs  = 2;
    
    message AlignExperience
    {
        string cityId  = 1;
        string orderId = 2;
        int64  level   = 3;
    }
}

message AlignSetRequest
{
    string userId   = 1;
    string cityId   = 2;
    string orderId  = 3;
    string serverId = 4;
    int64  level    = 5;
}

message AlignSetAnswer
{
}

message CompetitionMapRequest
{
    // 0    = random
    // 1-50 = selected map
    int64 mapNumber = 1;
}

message CompetitionMapAnswer
{
    int64  mapNumber      = 1;
    string mapNormalURL   = 2;
    string mapTacticalURL = 3;
    Source source         = 4;
}

message ConfigurationGetRequest
{
    string guildId = 1;
}

message ConfigurationGetAnswer
{
    string                  guildId         = 1;
    string                  serverId        = 2;
    repeated ChannelServer  channelServers  = 3;
    repeated AlmanaxWebhook almanaxWebhooks = 4;
    repeated RssWebhook     rssWebhooks     = 5;
    repeated TwitchWebhook  twitchWebhooks  = 6;
    repeated TwitterWebhook twitterWebhooks = 7;
    repeated YoutubeWebhook youtubeWebhooks = 8;

    message ChannelServer {
        string channelId = 1;
        string serverId  = 2;
    }

    message AlmanaxWebhook {
        string   channelId = 1;
        string   webhookId = 2;
    }

    message RssWebhook {
        string   channelId = 1;
        string   feedId    = 2;
        string   webhookId = 3;
    }

    message TwitchWebhook {
        string channelId  = 1;
        string streamerId = 2;
        string webhookId  = 3;
    }

    message TwitterWebhook {
        string   channelId = 1;
        string   twitterId = 2;
        string   webhookId = 3;
    }

    message YoutubeWebhook {
        string channelId = 1;
        string videastId = 2;
        string webhookId = 3;
    }
}

message ConfigurationSetServerRequest
{
    string       guildId      = 1;
    string       channelId    = 2;
    string       serverId     = 3;
}

message ConfigurationSetAlmanaxWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   webhookId    = 3;
    string   webhookToken = 4;
    bool     enabled      = 5;
}

message ConfigurationSetRssWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   feedId       = 3;
    string   webhookId    = 4;
    string   webhookToken = 5;
    bool     enabled      = 6;
}

message ConfigurationSetTwitchWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   streamerId   = 3;
    string   webhookId    = 4;
    string   webhookToken = 5;
    bool     enabled      = 6;
}

message ConfigurationSetTwitterWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   twitterId    = 3;
    string   webhookId    = 4;
    string   webhookToken = 5;
    bool     enabled      = 6;
}

message ConfigurationSetYoutubeWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   videastId    = 3;
    string   webhookId    = 4;
    string   webhookToken = 5;
    bool     enabled      = 6;
}

message ConfigurationSetAnswer
{
    string webhookId     = 1;
    bool   removeWebhook = 2;
}

message EncyclopediaAlmanaxRequest
{
    google.protobuf.Timestamp date = 1;
}

message EncyclopediaAlmanaxAnswer
{
    Almanax almanax = 1;
    Source  source  = 2;
}

message EncyclopediaAlmanaxEffectRequest
{
    string                    query  = 1;
    google.protobuf.Timestamp date   = 2;
    RequestType               type   = 3;
    int64                     offset = 4;
    int64                     size   = 5;

    enum RequestType {
        QUERY = 0;
        DATE  = 1;
    }
}

message EncyclopediaAlmanaxEffectAnswer
{
    string           query     = 1;
    int64            page      = 2;
    int64            pages     = 3;
    int64            total     = 4;
    repeated Almanax almanaxes = 5;
    Source           source    = 6;
}

message EncyclopediaAlmanaxResourceRequest
{
    int64 duration = 1;
}

message EncyclopediaAlmanaxResourceAnswer
{
    repeated Tribute tributes = 1;
    int64            duration = 2;
    Source           source   = 3;

    message Tribute
    {
        string   itemName = 1;
        ItemType itemType = 2;
        int64    quantity = 3;
    }
}

message EncyclopediaListRequest
{
    string query = 1;
    Type   type  = 2;

    enum Type
    {
        UNKNOWN        = 0;
        ITEM           = 1;
        SET            = 2;
        ALMANAX_EFFECT = 3;
    }
}

message EncyclopediaListAnswer
{
    repeated Item items = 1;

    message Item
    {
        string id   = 1;
        string name = 2;
    }
}

message EncyclopediaItemRequest
{
    string   query = 1;
    bool     isID  = 2;
    ItemType type  = 3;
}

message EncyclopediaItemAnswer
{
    ItemType   type       = 1;
    Equipment  equipment  = 2;
    Set        set        = 3;
    Source     source     = 4;

    message Equipment
    {
        string          id              =  1;
        string          name            =  2;
        string          description     =  3;
        Type            type            =  4;
        string          icon            =  5;
        int64           level           =  6;
        int64           pods            =  7;
        SetFamily       set             =  8;
        Characteristics characteristics =  9;
        repeated Effect weaponEffects   = 10;
        repeated Effect effects         = 11;
        Conditions      conditions      = 12;
        Recipe          recipe          = 13;
       
        message Characteristics {
            int64           cost           = 1;
            int64           minRange       = 2;
            int64           maxRange       = 3;
            int64           maxCastPerTurn = 4;
            int64           criticalRate   = 5;
            int64           criticalBonus  = 6;
            repeated string areas          = 7; //TODO
            // TODO LDV ?
        }

        message Type {
            ItemType      itemType       = 1;
            EquipmentType equipmentType  = 2;
            string        equipmentLabel = 3;
        }

        message SetFamily
        {
            string id   = 1;
            string name = 2;
        }
    }

    message Set
    {
        string             id         = 1;
        string             name       = 2;
        string             icon       = 3;
        int64              level      = 4;
        bool               isCosmetic = 5;
        repeated Equipment equipments = 6;
        repeated Bonus     bonuses    = 7;

        message Equipment 
        {
            string        id    = 1;
            string        name  = 2;
            EquipmentType type  = 3;
            int64         level = 4;
        }

        message Bonus
        {
            int64           itemNumber = 1;
            repeated Effect effects    = 2;
        }
    }

    message Effect
    {
        string id       = 1;
        string label    = 2;
    }

    message Conditions 
    {
        Relation            relation  = 1;
        repeated Conditions children  = 2;
        Condition           condition = 3;

        enum Relation 
        {
            NONE = 0;
            AND  = 1;
            OR   = 2;
        }

        message Condition 
        {
            string  operator = 1;
            int64   value    = 2;
            Element element  = 3;

            message Element
            {
                string id   = 1;
                string name = 2;
            }
        }
    }

    message Recipe
    {
        repeated Ingredient ingredients = 1;

        message Ingredient
        {
            string   id       = 1;
            string   name     = 2;
            int64    quantity = 3;
            ItemType type     = 4;
        }
    }
}

message JobGetBookRequest
{
    repeated string userIds  = 1;
    string          jobId    = 2;
    string          serverId = 3;
    int64           offset   = 4;
    int64           size     = 5;
}

message JobGetBookAnswer
{
    string             jobId     = 1;
    string             serverId  = 2;
    int64              page      = 3;
    int64              pages     = 4;
    int64              total     = 5;
    repeated Craftsman craftsmen = 6;
    
    message Craftsman
    {
        string userId = 1;
        int64  level  = 2;
    }
}

message JobGetUserRequest
{
    string userId   = 1;
    string serverId = 2;
}

message JobGetUserAnswer
{
    string                 serverId  = 1;
    repeated JobExperience jobs      = 2;
    
    message JobExperience
    {
        string jobId = 1;
        int64  level = 2;
    }
}

message JobSetRequest
{
    string userId   = 1;
    string jobId    = 2;
    string serverId = 3;
    int64  level    = 4;
}

message JobSetAnswer
{
}

message NewsAlmanaxMessage
{
    repeated I18nAlmanax almanaxes = 1;
    Source               source    = 2;

    message I18nAlmanax
    {
        Almanax  almanax = 1;
        Language locale  = 2;
    }
}

message NewsTwitterMessage
{
    string twitterId               = 1;
    string url                     = 2;
    google.protobuf.Timestamp date = 3;
}

message NewsRSSMessage
{
	string                    title       = 1;
    string                    description = 2;
    string                    authorName  = 3;
    string                    url         = 4;
    string                    iconUrl     = 5;
    google.protobuf.Timestamp date        = 6;
    string                    type        = 7;
}

message NewsGameMessage
{
	string version = 1;
}

message NewsSetMessage
{
	int64 missingSetNumber = 1;
    int64 builtSetNumber   = 2;
}

message PortalPositionRequest
{
    string serverId    = 1;
    string dimensionId = 2;
}

message PortalPositionAnswer
{
    repeated PortalPosition positions = 1;

    message PortalPosition {
        string                    serverId      = 1;
        string                    dimensionId   = 2;
        int64                     remainingUses = 3;
        Position                  position      = 4;
        string                    createdBy     = 5;
        string                    updatedBy     = 6;
        google.protobuf.Timestamp createdAt     = 7;
        google.protobuf.Timestamp updatedAt     = 8;
        Source                    source        = 9;

        message Position {
            int64 x                        = 1;
            int64 y                        = 2;
            bool isInCanopy                = 3;
            Transport transport            = 4;
            Transport conditionalTransport = 5;

            message Transport {
                string areaId    = 1;
                string subAreaId = 2;
                string typeId    = 3;
                int64 x          = 4;
                int64 y          = 5;
            }
        }
    }
}
