syntax="proto3";

import "google/protobuf/timestamp.proto";

package amqp;

option go_package = ".;amqp";

message RabbitMQMessage
{
    Type     type     = 1;
    Language language = 2;
    Status   status   = 3;

    AlignGetBookRequest                    alignGetBookRequest                   = 100;
    AlignGetBookAnswer                     alignGetBookAnswer                    = 101;
    AlignGetUserRequest                    alignGetUserRequest                   = 102;
    AlignGetUserAnswer                     alignGetUserAnswer                    = 103;
    AlignSetRequest                        alignSetRequest                       = 104;
    AlignSetAnswer                         alignSetAnswer                        = 105;
    
    ConfigurationGetRequest                configurationGetRequest               = 200;
    ConfigurationGetAnswer                 configurationGetAnswer                = 201;
    ConfigurationSetServerRequest          configurationSetServerRequest         = 202;
    ConfigurationSetAlmanaxWebhookRequest  configurationSetAlmanaxWebhookRequest = 203;
    ConfigurationSetRssWebhookRequest      configurationSetRssWebhookRequest     = 204;
    ConfigurationSetTwitterWebhookRequest  configurationSetTwitterWebhookRequest = 205;
    ConfigurationSetAnswer                 configurationSetAnswer                = 206;

    EncyclopediaAlmanaxRequest             encyclopediaAlmanaxRequest            = 300;
    EncyclopediaAlmanaxAnswer              encyclopediaAlmanaxAnswer             = 301;
    EncyclopediaItemListRequest            encyclopediaItemListRequest           = 302;
    EncyclopediaItemListAnswer             encyclopediaItemListAnswer            = 303;
    EncyclopediaItemRequest                encyclopediaItemRequest               = 304;
    EncyclopediaItemAnswer                 encyclopediaItemAnswer                = 305;
    EncyclopediaSetListRequest             encyclopediaSetListRequest            = 306;
    EncyclopediaSetListAnswer              encyclopediaSetListAnswer             = 307;
    EncyclopediaSetRequest                 encyclopediaSetRequest                = 308;
    EncyclopediaSetAnswer                  encyclopediaSetAnswer                 = 309;

    JobGetBookRequest                      jobGetBookRequest                     = 400;
    JobGetBookAnswer                       jobGetBookAnswer                      = 401;
    JobGetUserRequest                      jobGetUserRequest                     = 402;
    JobGetUserAnswer                       jobGetUserAnswer                      = 403;
    JobSetRequest                          jobSetRequest                         = 404;
    JobSetAnswer                           jobSetAnswer                          = 405;

    NewsTwitterMessage                     newsTwitterMessage                    = 500;
    NewsRSSMessage                         newsRSSMessage                        = 501;
 
    PortalPositionRequest                  portalPositionRequest                 = 600;
    PortalPositionAnswer                   portalPositionAnswer                  = 601;

    enum Type
    {
        UNKNOWN                                   =   0;

        ALIGN_GET_BOOK_REQUEST                    = 100;
        ALIGN_GET_BOOK_ANSWER                     = 101;
        ALIGN_GET_USER_REQUEST                    = 102;
        ALIGN_GET_USER_ANSWER                     = 103;
        ALIGN_SET_REQUEST                         = 104;
        ALIGN_SET_ANSWER                          = 105;

        CONFIGURATION_GET_REQUEST                 = 200;
        CONFIGURATION_GET_ANSWER                  = 201;
        CONFIGURATION_SET_SERVER_REQUEST          = 202;
        CONFIGURATION_SET_ALMANAX_WEBHOOK_REQUEST = 203;
        CONFIGURATION_SET_RSS_WEBHOOK_REQUEST     = 204;
        CONFIGURATION_SET_TWITTER_WEBHOOK_REQUEST = 205;
        CONFIGURATION_SET_ANSWER                  = 206;

        ENCYCLOPEDIA_ALMANAX_REQUEST              = 300;
        ENCYCLOPEDIA_ALMANAX_ANSWER               = 301;
        ENCYCLOPEDIA_ITEM_LIST_REQUEST            = 302;
        ENCYCLOPEDIA_ITEM_LIST_ANSWER             = 303;
        ENCYCLOPEDIA_ITEM_REQUEST                 = 304;
        ENCYCLOPEDIA_ITEM_ANSWER                  = 305;
        ENCYCLOPEDIA_SET_LIST_REQUEST             = 306;
        ENCYCLOPEDIA_SET_LIST_ANSWER              = 307;
        ENCYCLOPEDIA_SET_REQUEST                  = 308;
        ENCYCLOPEDIA_SET_ANSWER                   = 309;

        JOB_GET_BOOK_REQUEST                      = 400;
        JOB_GET_BOOK_ANSWER                       = 401;
        JOB_GET_USER_REQUEST                      = 402;
        JOB_GET_USER_ANSWER                       = 403;
        JOB_SET_REQUEST                           = 404;
        JOB_SET_ANSWER                            = 405;

        NEWS_RSS                                  = 500;
        NEWS_TWITTER                              = 501;

        PORTAL_POSITION_REQUEST                   = 600;
        PORTAL_POSITION_ANSWER                    = 601;
    }

    enum Status 
    {
        SUCCESS = 0;
        FAILED  = 1;
    }
}

enum Language 
{
    ANY = 0;
    FR  = 1;
    EN  = 2;
    ES  = 3;
    DE  = 4;
}

enum EquipmentType
{
    NONE   = 0;
    HAT    = 1;
    CLOAK  = 2;
    AMULET = 3;
    RING   = 4;
    BELT   = 5;
    BOOT   = 6;
    WEAPON = 7;
    SHIELD = 8;
    PET    = 9;
    DOFUS  = 10;
}

message Source
{
    string name = 1;
    string icon = 2;
    string url  = 3;
}

message AlignGetBookRequest
{
    repeated string userIds  = 1;
    string          cityId   = 2;
    string          orderId  = 3;
    string          serverId = 4;
    int64           limit    = 5;
}

message AlignGetBookAnswer
{
    string            serverId  = 1;
    repeated Believer believers = 2;
    
    message Believer
    {
        string cityId  = 1;
        string orderId = 2;
        string userId  = 3;
        int64  level   = 4;
    }
}

message AlignGetUserRequest
{
    string userId   = 1;
    string serverId = 2;
}

message AlignGetUserAnswer
{
    string                   serverId = 1;
    repeated AlignExperience beliefs  = 2;
    
    message AlignExperience
    {
        string cityId  = 1;
        string orderId = 2;
        int64  level   = 3;
    }
}

message AlignSetRequest
{
    string userId   = 1;
    string cityId   = 2;
    string orderId  = 3;
    string serverId = 4;
    int64  level    = 5;
}

message AlignSetAnswer
{
}

message ConfigurationGetRequest
{
    string guildId = 1;
}

message ConfigurationGetAnswer
{
    string                  guildId         = 1;
    string                  serverId        = 2;
    repeated ChannelServer  channelServers  = 3;
    repeated AlmanaxWebhook almanaxWebhooks = 4;
    repeated RssWebhook     rssWebhooks     = 5;
    repeated TwitterWebhook twitterWebhooks = 6;

    message ChannelServer {
        string channelId = 1;
        string serverId  = 2;
    }

    message AlmanaxWebhook {
        string   channelId = 1;
        string   webhookId = 2;
        Language language  = 3;
    }

    message RssWebhook {
        string   channelId = 1;
        string   feedId    = 2;
        string   webhookId = 3;
        Language language  = 4;
    }

    message TwitterWebhook {
        string   channelId = 1;
        string   name      = 2;
        string   webhookId = 3;
        Language language  = 4;
    }
}

message ConfigurationSetServerRequest
{
    string       guildId      = 1;
    string       channelId    = 2;
    string       serverId     = 3;
}

message ConfigurationSetAlmanaxWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   webhookId    = 3;
    string   webhookToken = 4;
    bool     enabled      = 5;
    Language language     = 6;
}

message ConfigurationSetRssWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   feedId       = 3;
    string   webhookId    = 4;
    string   webhookToken = 5;
    bool     enabled      = 6;
    Language language     = 7;
}

message ConfigurationSetTwitterWebhookRequest
{
    string   guildId      = 1;
    string   channelId    = 2;
    string   webhookId    = 3;
    string   webhookToken = 4;
    bool     enabled      = 5;
    Language language     = 6;
}

message ConfigurationSetAnswer
{
    string webhookId     = 1;
    bool   removeWebhook = 2;
}

message EncyclopediaAlmanaxRequest   
{
    // TODO
}

message EncyclopediaAlmanaxAnswer    
{
    // TODO
}

message EncyclopediaItemListRequest  
{
    string query = 1;
}

message EncyclopediaItemListAnswer
{
    repeated Item items = 1;

    message Item
    {    
        string id   = 1;
        string name = 2;
    }
}

message EncyclopediaItemRequest
{
    string query = 1;
}

message EncyclopediaItemAnswer       
{
    string             id            =  1;
    string             name          =  2;
    string             description   =  3;
    string             labelType     =  4;
    int64              level         =  5;
    int64              pods          =  6;
    EquipmentType      equipmentType =  7;
    Set                set           =  8;
    repeated Effect    effects       =  9;
    Source             source        = 10;
    // TODO Damage, Recipe, conditions, Misc (two hands, ap cost, etc)

    message Effect
    {
        string id    = 1;
        string label = 2;
    }

    message Set
    {
        string id   = 1;
        string name = 2;
    }
}

message EncyclopediaSetListRequest   
{
    string query = 1;
}

message EncyclopediaSetListAnswer    
{
    repeated Set sets = 1;

    message Set 
    {    
        string id   = 1;
        string name = 2;
    }
}

message EncyclopediaSetRequest       
{
    string query = 1;
}

message EncyclopediaSetAnswer        
{
    string             id         = 1;
    string             name       = 2;
    int64              level      = 3;
    repeated Equipment equipments = 4;
    repeated Bonus     bonuses    = 5;
    Source             source     = 6;

    message Equipment 
    {
        string        id    = 1;
        string        name  = 2;
        EquipmentType type  = 3;
        int64         level = 4;
    }

    message Bonus
    {
        int64           itemNumber = 1;
        repeated Effect effects    = 2;
    }

    message Effect
    {
        string id    = 1;
        string label = 2;
    }
}

message JobGetBookRequest
{
    repeated string userIds  = 1;
    string          jobId    = 2;
    string          serverId = 3;
    int64           limit    = 4;
}

message JobGetBookAnswer
{
    string             jobId     = 1;
    string             serverId  = 2;
    repeated Craftsman craftsmen = 3;
    
    message Craftsman
    {
        string userId = 1;
        int64  level  = 2;
    }
}

message JobGetUserRequest
{
    string userId   = 1;
    string serverId = 2;
}

message JobGetUserAnswer
{
    string                 serverId  = 1;
    repeated JobExperience jobs      = 2;
    
    message JobExperience
    {
        string jobId = 1;
        int64  level = 2;
    }
}

message JobSetRequest
{
    string userId   = 1;
    string jobId    = 2;
    string serverId = 3;
    int64  level    = 4;
}

message JobSetAnswer
{
}

message NewsTwitterMessage
{
    string url                     = 1;
    google.protobuf.Timestamp date = 2;
}

message NewsRSSMessage
{
	string                    title      = 1;
    string                    authorName = 2;
    string                    url        = 3;
    string                    iconUrl    = 4;
    google.protobuf.Timestamp date       = 5;
    string                    type       = 6;
}

message PortalPositionRequest
{
    string serverId    = 1;
    string dimensionId = 2;
}

message PortalPositionAnswer
{
    repeated PortalPosition positions = 1;

    message PortalPosition {
        string                    serverId      = 1;
        string                    dimensionId   = 2;
        int32                     remainingUses = 3;
        Position                  position      = 4;
        string                    createdBy     = 5;
        string                    updatedBy     = 6;
        google.protobuf.Timestamp createdAt     = 7;
        google.protobuf.Timestamp updatedAt     = 8;
        Source                    source        = 9;

        message Position {
            int32 x                        = 1;
            int32 y                        = 2;
            bool isInCanopy                = 3;
            Transport transport            = 4;
            Transport conditionalTransport = 5;

            message Transport {
                string areaId    = 1;
                string subAreaId = 2;
                string typeId    = 3;
                int32 x          = 4;
                int32 y          = 5;
            }
        }
    }
}
